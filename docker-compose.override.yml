version: '3.4'

services:

  vc-db:
    image: mcr.microsoft.com/mssql/server:latest
    ports:
      - "${DOCKER_SQL_PORT:-1433}:1433"
    expose:  
      - 1433  
    environment: 
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express
      - SA_PASSWORD=v!rto_Labs!
    volumes:
      - db-volume:/var/opt/mssql 
    networks:
      - virto

  vc-platform-web:
    build: 
      context: .
      dockerfile: Platform.Dockerfile
      args:
        platform_arg: ${PLATFORM_VERSION}
    image: virtocommerce/platform:${DOCKER_TAG:-latest}
    ports:
      - "${DOCKER_PLATFORM_PORT:-8090}:80"
    environment:
      - ASPNETCORE_URLS=http://+
      - VirtoCommerce__AllowInsecureHttp=true
      - ConnectionStrings__VirtoCommerce=Data Source=vc-db;Initial Catalog=VirtoCommerce3docker;Persist Security Info=True;User ID=sa;Password=v!rto_Labs!;MultipleActiveResultSets=False;
      - Assets__FileSystem__PublicUrl=http://localhost:${DOCKER_PLATFORM_PORT:-8090}/assets/
      - Content__FileSystem__PublicUrl=http://localhost:${DOCKER_PLATFORM_PORT:-8090}/cms-content/
    depends_on:
      - vc-db 
    entrypoint: ["/wait-for-it.sh", "vc-db:1433", "-t", "120", "--", "dotnet", "VirtoCommerce.Platform.Web.dll"]
    volumes:
      - ${CMS_CONTENT_VOLUME}:/opt/virtocommerce/platform/wwwroot/cms-content
    networks:
      - virto

  virtocommerce.storefront:
    environment:
      - VirtoCommerce__Endpoint__Url=http://vc-platform-web
      - VirtoCommerce__Endpoint__UserName=admin
      - VirtoCommerce__Endpoint__Password=store
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - vc-platform-web    
    ports:
      - "${DOCKER_STOREFRONT_PORT:-8080}:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${CMS_CONTENT_VOLUME}:/app/wwwroot/cms-content
    networks:
        - virto

volumes:
  db-volume:
    name: db-volume

networks:
  virto:
    external:
      name: nat        
